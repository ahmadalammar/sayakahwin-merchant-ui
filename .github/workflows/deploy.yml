name: Deploy to Production

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prd 
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/sayakahwin-merchant-ui
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.prod
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_API_BASE_URL=${{ secrets.VITE_API_BASE_URL }}
            VITE_CARD_BASE_URL=${{ secrets.VITE_CARD_BASE_URL }}

      - name: Copy deployment files
        uses: appleboy/scp-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          passphrase: ${{ secrets.PROD_SSH_PASSPHRASE }}
          source: "docker-compose.prod.yml"
          target: "/home/ubuntu/sayakahwin-merchant-ui"
          timeout: 20s

      - name: Deploy to production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PROD_SSH_HOST }}
          username: ${{ secrets.PROD_SSH_USER }}
          key: ${{ secrets.PROD_SSH_KEY }}
          passphrase: ${{ secrets.PROD_SSH_PASSPHRASE }}
          script: |
            # Update package list and install Docker Compose v2
            sudo apt-get update
            sudo apt-get install -y docker-compose-plugin

            # (Optional) Add a symlink so docker-compose command also works
            if ! command -v docker-compose &> /dev/null; then
              sudo ln -s /usr/bin/docker compose /usr/local/bin/docker-compose
            fi

            # Create deployment directory
            mkdir -p /home/ubuntu/sayakahwin-merchant-ui
            cd /home/ubuntu/sayakahwin-merchant-ui

            # Replace image tag in docker-compose.prod.yml
            sed -i "s|\${DOCKERHUB_USERNAME}|${{ secrets.DOCKERHUB_USERNAME }}|g" docker-compose.prod.yml

            # Create .env file
            cat <<EOF > .env
            ${{ secrets.PROD_ENV_FILE }}
            EOF

            # Pull new merchant-ui image
            docker compose -f docker-compose.prod.yml pull merchant-ui

            docker compose -f docker-compose.prod.yml up -d 

            # (Optional) Clean up unused images to save disk space
            docker image prune -af
